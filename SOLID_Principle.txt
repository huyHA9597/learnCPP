SOLID is an acronym which stands for the following design principles
    - Single Responsibility Principle (SRP)
    - Open-closed Principle (OCP)
    - Liskov Subsitution Principle (LSP)
    - Interface Segregation Principle (ISP)
    - Dependency Inversion Principle (DIP)

1. SRP: 
- Each class has only one responsibitily, and therefore has only one reason to change.
2. OCP:
- A type is open for extension but closed for modification.
3. LSP:
- If an interface takes an object of type Parent, it should equally take an object of
type Child without anything breaking.
4. ISP:
- Split up interfaces so the that implementors can pick and choose depending on their needs.
5. DIP:
- High-level modules should not depend on low-level modules. Both should depend
on abstractions.
- Abstractions should not depend on details. Details should depend on abstractions.